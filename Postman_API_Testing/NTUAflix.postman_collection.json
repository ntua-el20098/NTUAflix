{
	"info": {
		"_postman_id": "44d93ed0-559d-460f-9447-b5a2e313de3e",
		"name": "NTUAflix",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "30656568",
		"_collection_link": "https://bold-meteor-55241.postman.co/workspace/SoftEng~cc3d68f6-d3ac-490c-882b-f363223a02c6/collection/30656568-44d93ed0-559d-460f-9447-b5a2e313de3e?action=share&source=collection_link&creator=30656568"
	},
	"item": [
		{
			"name": "admin endpoints",
			"item": [
				{
					"name": "resetall",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.test(\"Response status code is 200\", function () {",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"",
									"",
									"",
									"    pm.test(\"Content-Type header is application/json\", function () {",
									"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"    });",
									"",
									"    pm.test(\"Check response body\", function () {     ",
									"        const expected = {",
									"            status: \"OK\"",
									"        };",
									"",
									"        const responseData = pm.response.json(); // Assuming the response is in JSON format",
									"        pm.expect(responseData).to.eql(expected);",
									"    });",
									"",
									"}",
									"else if (pm.response.code == 500){",
									"",
									"    pm.test(\"Response status code is 500\", function () {",
									"        pm.expect(pm.response.code).to.equal(500);",
									"    });",
									"",
									"    pm.test(\"Check response body\", function () {     ",
									"        const expected = {",
									"             status : \"failed\",",
									"             reason : {",
									"                message: \"\",",
									"                code: \"ECONNREFUSED\"",
									"        \t}",
									"        };",
									"        const responseData = pm.response.json(); // Assuming the response is in JSON format",
									"        pm.expect(responseData).to.eql(expected);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/admin/resetall?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"admin",
								"resetall"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}",
									"description": "json or csv"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 ΟΚ",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{baseURL}}/admin/resetall"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-Xkt/QimCWlGOh45ZGS9l8h+Y3WE\""
								},
								{
									"key": "Date",
									"value": "Sat, 10 Feb 2024 23:22:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"OK\",\n    \"message\": \"All tables have been reset\"\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/admin/resetall?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admin",
										"resetall"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}",
											"description": "json or csv"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "65"
								},
								{
									"key": "ETag",
									"value": "W/\"41-1o7LtH50sG5MsASNGv5+7icupKg\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 19:23:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"failed\",\n    \"reason\": {\n        \"message\": \"\",\n        \"code\": \"ECONNREFUSED\"\n    }\n}"
						}
					]
				},
				{
					"name": "healthcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.status).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.dataconnection).to.exist.and.to.be.an('object');",
									"});",
									"",
									"",
									"pm.test(\"Response time is within an acceptable range\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "format",
								"value": "{{format}}",
								"description": "json or csv",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/admin/healthcheck?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"admin",
								"healthcheck"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}",
									"description": "json or csv\n"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 ΟΚ",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{baseURL}}/admin/healthcheck"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "83"
								},
								{
									"key": "ETag",
									"value": "W/\"53-H9TiPmN6SkrPlQGW9nVWM+h1EmI\""
								},
								{
									"key": "Date",
									"value": "Sat, 10 Feb 2024 19:23:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"OK\",\n    \"dataconnection\": {\n        \"host\": \"localhost\",\n        \"user\": \"root\",\n        \"database\": \"tl\"\n    }\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{baseURL}}/admin/healthcheck"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "87"
								},
								{
									"key": "ETag",
									"value": "W/\"57-PKhe5UbBIMiZ4GE3F9uy9vT3X4g\""
								},
								{
									"key": "Date",
									"value": "Sat, 10 Feb 2024 19:44:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"failed\",\n    \"dataconnection\": {\n        \"host\": \"localhost\",\n        \"user\": \"root\",\n        \"database\": \"tl\"\n    }\n}"
						}
					]
				},
				{
					"name": "upload/titlebasics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('Response has the required field - message', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist.and.to.be.a('string');",
									"})",
									"",
									"pm.test('Message is a non-empty string', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
									"})",
									"",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"})",
									"",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"})",
									"",
									"pm.test(\"Response body is equal to an expected value\", function () {",
									"    const expectedResponse = {",
									"        message: 'TSV data inserted into the database successfully.'",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eec84ec-c11d-48b0-9673-e509918cc975"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/admin/upload/titlebasics?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"admin",
								"upload",
								"titlebasics"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}",
									"description": "json or csv"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1eec84ec-c11d-48b0-9673-e509918cc975"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/admin/upload/titlebasics?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admin",
										"upload",
										"titlebasics"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}",
											"description": "json or csv"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-yGnj/O2Rdimt3vkbVeV+8/8Wfaw\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 20:29:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"TSV data inserted into the database successfully.\"\n}"
						}
					]
				},
				{
					"name": "upload/namebasics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"  pm.expect(pm.response.text()).to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response body is a valid JSON\", function () {",
									"  pm.response.to.be.json;",
									"});",
									"",
									"",
									"pm.test(\"Response body does not contain any error messages\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.not.have.property('error');",
									"});",
									"pm.test(\"Response body is equal to an expected value\", function () {",
									"    const expectedResponse = {",
									"        message: 'TSV data inserted into the database successfully.'",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.eql(expectedResponse);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eec851b-c940-4ef0-acab-a274c551321d"
								},
								{
									"key": "file",
									"value": "sdfdsfdsf",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/admin/upload/namebasics?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"admin",
								"upload",
								"namebasics"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1eec851b-c940-4ef0-acab-a274c551321d"
										},
										{
											"key": "file",
											"value": "sdfdsfdsf",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/admin/upload/namebasics?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admin",
										"upload",
										"namebasics"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-yGnj/O2Rdimt3vkbVeV+8/8Wfaw\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 20:31:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"TSV data inserted into the database successfully.\"\n}"
						}
					]
				},
				{
					"name": "upload/titleakas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has a valid Content-Type header\", function () {",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"  pm.expect(pm.response.text()).to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response body is a valid JSON object\", function () {",
									"  pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response body is equal to an expected value\", function () {",
									"    const expectedResponse = {",
									"        message: 'TSV data inserted into the database successfully.'",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eec84ed-fd90-4490-8e64-9d7ebeecbce0"
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/admin/upload/titleakas?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"admin",
								"upload",
								"titleakas"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}",
									"description": "json or csv"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1eec84ed-fd90-4490-8e64-9d7ebeecbce0"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/admin/upload/titleakas?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admin",
										"upload",
										"titleakas"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}",
											"description": "json or csv"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-yGnj/O2Rdimt3vkbVeV+8/8Wfaw\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 19:08:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"TSV data inserted into the database successfully.\"\n}"
						}
					]
				},
				{
					"name": "upload/titlecrew",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"pm.test(\"Response time is within an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response body is equal to an expected value\", function () {",
									"    const expectedResponse = {",
									"        message: 'TSV data inserted into the database successfully.'",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eec851d-ff9f-42b0-bc6c-c33f6c86406e"
								}
							]
						},
						"url": "{{baseURL}}/admin/upload/titlecrew"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1eec851d-ff9f-42b0-bc6c-c33f6c86406e"
										}
									]
								},
								"url": "{{baseURL}}/admin/upload/titlecrew"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-yGnj/O2Rdimt3vkbVeV+8/8Wfaw\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 20:31:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"TSV data inserted into the database successfully.\"\n}"
						}
					]
				},
				{
					"name": "upload/titleepisode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response body is a valid JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"",
									"pm.test(\"Response body is equal to an expected value\", function () {",
									"    const expectedResponse = {",
									"        message: 'TSV data inserted into the database successfully.'",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eec8523-3201-4c80-90c0-7e12990497a0"
								}
							]
						},
						"url": "{{baseURL}}/admin/upload/titleepisode"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1eec8523-3201-4c80-90c0-7e12990497a0"
										}
									]
								},
								"url": "{{baseURL}}/admin/upload/titleepisode"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-yGnj/O2Rdimt3vkbVeV+8/8Wfaw\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 20:32:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"TSV data inserted into the database successfully.\"\n}"
						}
					]
				},
				{
					"name": "upload/titleprincipals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response content type is application/json\", function () {",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"    pm.expect(pm.response.text()).to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response body is a valid JSON format\", function () {",
									"  pm.response.to.be.json;",
									"});",
									"",
									"",
									"pm.test(\"Response body is equal to an expected value\", function () {",
									"    const expectedResponse = {",
									"        message: 'TSV data inserted into the database successfully.'",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.eql(expectedResponse);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eec8527-64f5-4c50-a3ff-15927fb68473"
								}
							]
						},
						"url": "{{baseURL}}/admin/upload/titleprincipals"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1eec8527-64f5-4c50-a3ff-15927fb68473"
										}
									]
								},
								"url": "{{baseURL}}/admin/upload/titleprincipals"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-yGnj/O2Rdimt3vkbVeV+8/8Wfaw\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 20:32:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"TSV data inserted into the database successfully.\"\n}"
						}
					]
				},
				{
					"name": "upload/titleratings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body is not empty\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response body is in the expected JSON format\", function () {",
									"  pm.expect(pm.response.json()).to.be.an('object');",
									"});",
									"",
									"",
									"pm.test(\"Response body does not contain any error messages\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.error).to.not.exist;",
									"});",
									"",
									"pm.test(\"Response body is equal to an expected value\", function () {",
									"    const expectedResponse = {",
									"        message: 'TSV data inserted into the database successfully.'",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.eql(expectedResponse);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "postman-cloud:///1eec852a-82b7-4d80-8e65-abf0f54a2330"
								}
							]
						},
						"url": "{{baseURL}}/admin/upload/titleratings"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1eec852a-82b7-4d80-8e65-abf0f54a2330"
										}
									]
								},
								"url": "{{baseURL}}/admin/upload/titleratings"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "ETag",
									"value": "W/\"3f-yGnj/O2Rdimt3vkbVeV+8/8Wfaw\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 20:33:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"TSV data inserted into the database successfully.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "title endpoints",
			"item": [
				{
					"name": "get titleObject by titleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200){",
									"    pm.test('Response status code is 200', function () {",
									"        pm.response.to.have.status(200);",
									"    })",
									"",
									"    pm.test('Content type is application/json', function () {",
									"        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"    })",
									"",
									"    pm.test('Verify that the titleID is a non-empty string', function () {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData.titleObject.titleID).to.be.a('string').and.to.have.lengthOf.at.least(1, 'titleID should not be empty');",
									"    })",
									"",
									"    pm.test('Verify that the type is a non-empty string', function () {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData).to.be.an('object');",
									"        pm.expect(responseData.titleObject.type).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');",
									"    })",
									"    pm.test(\"Response structure is correct\", function () {",
									"        let jsonData = pm.response.json();",
									"        ",
									"        // Check if titleObject is present",
									"        pm.expect(jsonData).to.have.property(\"titleObject\");",
									"",
									"        // Validate titleObject structure",
									"        let titleObject = jsonData.titleObject;",
									"        pm.expect(titleObject).to.have.property(\"titleID\");",
									"        pm.expect(titleObject).to.have.property(\"type\");",
									"        pm.expect(titleObject).to.have.property(\"originalTitle\");",
									"        pm.expect(titleObject).to.have.property(\"titlePoster\");",
									"        pm.expect(titleObject).to.have.property(\"startYear\");",
									"        pm.expect(titleObject).to.have.property(\"endYear\");",
									"        pm.expect(titleObject).to.have.property(\"genres\").that.is.an(\"array\");",
									"        pm.expect(titleObject).to.have.property(\"titleAkas\").that.is.an(\"array\");",
									"        pm.expect(titleObject).to.have.property(\"principals\").that.is.an(\"array\");",
									"        pm.expect(titleObject).to.have.property(\"rating\");",
									"",
									"        // Validate nested properties",
									"        if (titleObject.genres.length > 0) {",
									"            pm.expect(titleObject.genres[0]).to.have.property(\"genreTitle\");",
									"        }",
									"",
									"        if (titleObject.titleAkas.length > 0) {",
									"            pm.expect(titleObject.titleAkas[0]).to.have.property(\"akaTitle\");",
									"            pm.expect(titleObject.titleAkas[0]).to.have.property(\"regionAbbrev\");",
									"        }",
									"",
									"        if (titleObject.principals.length > 0) {",
									"            pm.expect(titleObject.principals[0]).to.have.property(\"nameID\");",
									"            pm.expect(titleObject.principals[0]).to.have.property(\"name\");",
									"            pm.expect(titleObject.principals[0]).to.have.property(\"category\");",
									"        }",
									"",
									"        pm.expect(titleObject.rating).to.have.property(\"avRating\");",
									"        pm.expect(titleObject.rating).to.have.property(\"nVotes\");",
									"    });",
									"    ",
									"    pm.test(\"We get the correct titleObject\", function() {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData.titleObject.titleID).to.equal(pm.variables.get(\"titleID\"));",
									"    });",
									"}",
									"else if (pm.response.code === 204) {",
									"    pm.test('Response status code is 204', function () {",
									"        pm.response.to.have.status(204);",
									"    });",
									"",
									"    pm.test('Response body is empty', function () {",
									"        pm.expect(pm.response.text()).to.be.empty;",
									"    });",
									"",
									"    pm.test('Content-Type header is not present', function () {",
									"        pm.response.to.not.have.header('Content-Type');",
									"    });",
									"",
									"    // Add more specific tests for the 204 No Content response if needed",
									"}",
									"else if(pm.response.code == 400){",
									"    pm.test(\"Response status code is 400\", function () {",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"",
									"",
									"    pm.test(\"Content-Type header is present and has value 'application/json'\", function () {",
									"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"    });",
									"",
									"",
									"    pm.test(\"Response body has a non-empty 'message' field\", function () {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData.message).to.exist.and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
									"    });",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/title/:titleID?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"title",
								":titleID"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}"
								}
							],
							"variable": [
								{
									"key": "titleID",
									"value": "{{titleID}}"
								}
							]
						},
						"description": "This endpoint makes an HTTP GET request to retrieve information about a specific title identified by the titleID, with an optional format parameter. The response will include details such as the title's ID, type, original title, poster, start and end years, genres, alternate titles, region abbreviations, principals involved, and ratings with average rating and number of votes."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/title/:titleID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"title",
										":titleID"
									],
									"variable": [
										{
											"key": "titleID",
											"value": "tt0015414"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "740"
								},
								{
									"key": "ETag",
									"value": "W/\"2e4-JZlna+KwhGzWQm/YOdDV+rqjBUE\""
								},
								{
									"key": "Date",
									"value": "Sat, 10 Feb 2024 23:30:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"titleObject\": {\n        \"titleID\": \"tt0015414\",\n        \"type\": \"movie\",\n        \"originalTitle\": \"La tierra de los toros\",\n        \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/hIPPcKfGfmr435bLWICRxPSfiDR.jpg\",\n        \"startYear\": \"2000\",\n        \"endYear\": \"\",\n        \"genres\": [\n            {\n                \"genreTitle\": \"\"\n            }\n        ],\n        \"titleAkas\": [\n            {\n                \"akaTitle\": \"La tierra de los toros\",\n                \"regionAbbrev\": \"ES\"\n            },\n            {\n                \"akaTitle\": \"La tierra de los toros\",\n                \"regionAbbrev\": \"\"\n            },\n            {\n                \"akaTitle\": \"La terre des taureaux\",\n                \"regionAbbrev\": \"FR\"\n            },\n            {\n                \"akaTitle\": \"The Land of the Bulls\",\n                \"regionAbbrev\": \"XWW\"\n            },\n            {\n                \"akaTitle\": \"La Terre des taureaux\",\n                \"regionAbbrev\": \"FR\"\n            }\n        ],\n        \"principals\": [\n            {\n                \"nameID\": \"nm0147437\",\n                \"name\": \"Antonio Cañero\",\n                \"category\": \"self\"\n            },\n            {\n                \"nameID\": \"nm0615736\",\n                \"name\": \"Musidora\",\n                \"category\": \"self, director\"\n            }\n        ],\n        \"rating\": {\n            \"avRating\": \"5.2\",\n            \"nVotes\": \"16\"\n        }\n    }\n}"
						},
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/title/:titleID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"title",
										":titleID"
									],
									"variable": [
										{
											"key": "titleID",
											"value": "tt00154141"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "ETag",
									"value": "W/\"29-yNz0z5PEEUAosWra6JctqoCd2Hs\""
								},
								{
									"key": "Date",
									"value": "Sat, 10 Feb 2024 20:27:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/title/:titleID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"title",
										":titleID"
									],
									"variable": [
										{
											"key": "titleID",
											"value": "2134213"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-r29C0vFERMfqIc9774XaJNaj9T8\""
								},
								{
									"key": "Date",
									"value": "Sat, 10 Feb 2024 23:31:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid titleID parameter! titleID should start with tt\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/titleheader/:titleID?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"titleheader",
										":titleID"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}"
										}
									],
									"variable": [
										{
											"key": "titleID",
											"value": "{{titleID}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "ETag",
									"value": "W/\"20-vR0cOg1KTdb3FXDDvNw4n8id4AY\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 22:03:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Endpoint not found\"\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/title/:titleID?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"title",
										":titleID"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}"
										}
									],
									"variable": [
										{
											"key": "titleID",
											"value": "{{titleID}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "94"
								},
								{
									"key": "ETag",
									"value": "W/\"5e-64ymVgGSzk7287Ix+123V4D75FY\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 18:04:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Error in connection to the database\",\n    \"error\": {\n        \"code\": \"ECONNREFUSED\",\n        \"fatal\": true\n    }\n}"
						}
					]
				},
				{
					"name": "get titleObjects by titlePart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200){",
									"    pm.test(\"Status code is 200 for successful search\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"Validate search results structure\", function () {",
									"        let jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.be.an('array')",
									"        pm.expect(jsonData.length).to.be.greaterThan(0)",
									"    ",
									"        for (const element of jsonData) {",
									"                pm.test(`Response structure is correct for ${element.titleObject.titleID}`, function () {",
									"                    let jsonData = pm.response.json();",
									"                    ",
									"                    // Check if titleObject is present",
									"                    pm.expect(jsonData).to.be.an(\"array\");",
									"",
									"                    // Validate titleObject structure",
									"                    let titleObject = element.titleObject;",
									"                    pm.expect(titleObject).to.have.property(\"titleID\");",
									"                    pm.expect(titleObject).to.have.property(\"type\");",
									"                    pm.expect(titleObject).to.have.property(\"originalTitle\");",
									"                    pm.expect(titleObject).to.have.property(\"titlePoster\");",
									"                    pm.expect(titleObject).to.have.property(\"startYear\");",
									"                    pm.expect(titleObject).to.have.property(\"endYear\");",
									"                    pm.expect(titleObject).to.have.property(\"genres\").that.is.an(\"array\");",
									"                    pm.expect(titleObject).to.have.property(\"titleAkas\").that.is.an(\"array\");",
									"                    pm.expect(titleObject).to.have.property(\"principals\").that.is.an(\"array\");",
									"                    pm.expect(titleObject).to.have.property(\"rating\").that.is.an(\"object\");",
									"",
									"                    // Validate nested properties",
									"                    if (titleObject.genres.length > 0) {",
									"                        pm.expect(titleObject.genres[0]).to.have.property(\"genreTitle\").that.is.a(\"string\");",
									"                    }",
									"",
									"                    if (titleObject.titleAkas.length > 0) {",
									"                        pm.expect(titleObject.titleAkas[0]).to.have.property(\"akaTitle\").that.is.a(\"string\");",
									"                        pm.expect(titleObject.titleAkas[0]).to.have.property(\"regionAbbrev\").that.is.a(\"string\");",
									"                    }",
									"",
									"                    if (titleObject.principals.length > 0) {",
									"                        pm.expect(titleObject.principals[0]).to.have.property(\"nameID\").that.is.a(\"string\");",
									"                        pm.expect(titleObject.principals[0]).to.have.property(\"name\").that.is.a(\"string\");",
									"                        pm.expect(titleObject.principals[0]).to.have.property(\"category\").that.is.a(\"string\");",
									"                    }",
									"",
									"                    pm.expect(titleObject.rating).to.have.property(\"avRating\").that.is.a(\"string\");",
									"                    pm.expect(titleObject.rating).to.have.property(\"nVotes\").that.is.a(\"string\");",
									"            });",
									"        ",
									"        }",
									"",
									"    });",
									"}",
									"else if (pm.response.code === 204) {",
									"    pm.test('Response status code is 204', function () {",
									"        pm.response.to.have.status(204);",
									"    });",
									"",
									"    pm.test('Response body is empty', function () {",
									"        pm.expect(pm.response.text()).to.be.empty;",
									"    });",
									"",
									"    pm.test('Content-Type header is not present', function () {",
									"        pm.response.to.not.have.header('Content-Type');",
									"    });",
									"",
									"    // Add more specific tests for the 204 No Content response if needed",
									"}",
									"else if(pm.response.code == 400){",
									"    pm.test(\"Response status code is 400\", function () {",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"",
									"",
									"    pm.test(\"Content-Type header is present and has value 'application/json'\", function () {",
									"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"    });",
									"",
									"",
									"    pm.test(\"Response body has a non-empty 'message' field\", function () {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData.message).to.exist.and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tqueryObject\": {\n        \"titlePart\": \"{{titlePart}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/searchtitle?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"searchtitle"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "format",
									"value": "{{format}}",
									"description": "Can be either json or csv"
								}
							]
						},
						"description": "# Search Title\n\nThis endpoint makes an HTTP GET request to search for titles based on the provided query parameters.\n\n## Request\n\n- Method: GET\n- URL: {{baseURL}}/searchtitle\n- Query Parameters:\n    - format (string, required): The format of the search results.\n\n### Request Body\n\nThe request body should be in raw format and should contain a JSON object with the following structure:\n\n``` json\n{\n  \"tqueryObject\": {\n    \"titlePart\": \"\"\n  }\n}\n\n ```\n\n## Response\n\nThe response will be a JSON array containing objects with the following structure:\n\n``` json\n[\n  {\n    \"titleObject\": {\n      \"titleID\": \"\",\n      \"type\": \"\",\n      \"originalTitle\": \"\",\n      \"titlePoster\": \"\",\n      \"startYear\": \"\",\n      \"endYear\": \"\",\n      \"genres\": [\n        {\n          \"genreTitle\": \"\"\n        }\n      ],\n      \"titleAkas\": [\n        {\n          \"akaTitle\": \"\",\n          \"regionAbbrev\": \"\"\n        }\n      ],\n      \"principals\": [\n        {\n          \"nameID\": \"\",\n          \"name\": \"\",\n          \"category\": \"\"\n        }\n      ],\n      \"rating\": {\n        \"avRating\": \"\",\n        \"nVotes\": \"\"\n      }\n    }\n  }\n]\n\n ```\n\nEach object in the array represents a title with its associated details such as title ID, type, original title, start and end years, genres, alternate titles, principals, and ratings."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tqueryObject\": {\n    \"titlePart\": \"he\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchtitle?format=json",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchtitle"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "Can be either json or csv"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "9359"
								},
								{
									"key": "ETag",
									"value": "W/\"248f-ZXy3MmAyqbCMh/XeFRKBwOH/M64\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 00:25:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0034841\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Hen Hop\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/88EH2TVg6fGK7SnGXcfQ05MD2Rk.jpg\",\n            \"startYear\": \"1994\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Hen Hop\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Hen Hop\",\n                    \"regionAbbrev\": \"FR\"\n                },\n                {\n                    \"akaTitle\": \"To pidima tis kotas\",\n                    \"regionAbbrev\": \"GR\"\n                },\n                {\n                    \"akaTitle\": \"Hen Hop\",\n                    \"regionAbbrev\": \"CA\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0572235\",\n                    \"name\": \"Norman McLaren\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.3\",\n                \"nVotes\": \"282\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0081008\",\n            \"type\": \"movie\",\n            \"originalTitle\": \"Kommen und gehen\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1994\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Kommen und gehen\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Kommen und gehen\",\n                    \"regionAbbrev\": \"DE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0389846\",\n                    \"name\": \"Lew Hohmann\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"\",\n                \"nVotes\": \"\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0088283\",\n            \"type\": \"tvEpisode\",\n            \"originalTitle\": \"Tod durch elektrischen Strom\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Crime\"\n                },\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Mystery\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Tod durch elektrischen Strom\",\n                    \"regionAbbrev\": \"DDDE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0030676\",\n                    \"name\": \"Horst Ansorge\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0042259\",\n                    \"name\": \"Conrad Aust\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0089760\",\n                    \"name\": \"Renate Blume\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0123981\",\n                    \"name\": \"Hans-Erich Busch\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0296260\",\n                    \"name\": \"Jürgen Frohriep\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0331498\",\n                    \"name\": \"Sonja Goslicki\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0353436\",\n                    \"name\": \"Peter Hagen\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0459031\",\n                    \"name\": \"Jörg Kleinau\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0726258\",\n                    \"name\": \"Lutz Riemann\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0812320\",\n                    \"name\": \"Rolf Sohre\",\n                    \"category\": \"cinematographer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6\",\n                \"nVotes\": \"38\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097984\",\n            \"type\": \"movie\",\n            \"originalTitle\": \"Shen tong\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/cidqGNInwlqt6p14zQf2guS3B0h.jpg\",\n            \"startYear\": \"1993\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Action\"\n                },\n                {\n                    \"genreTitle\": \"Adventure\"\n                },\n                {\n                    \"genreTitle\": \"Drama\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Ninja in Ancient China\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"Ren zhe wu di\",\n                    \"regionAbbrev\": \"HK\"\n                },\n                {\n                    \"akaTitle\": \"San kuo zi ren zhe yuan liu\",\n                    \"regionAbbrev\": \"CN\"\n                },\n                {\n                    \"akaTitle\": \"Da lu si jie\",\n                    \"regionAbbrev\": \"HK\"\n                },\n                {\n                    \"akaTitle\": \"Ninja in Ancient China\",\n                    \"regionAbbrev\": \"XWW\"\n                },\n                {\n                    \"akaTitle\": \"Shen tong\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Ninja in Ancient China\",\n                    \"regionAbbrev\": \"GB\"\n                },\n                {\n                    \"akaTitle\": \"The Prowess\",\n                    \"regionAbbrev\": \"HK\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0150971\",\n                    \"name\": \"Ki-Hop Chan\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0151653\",\n                    \"name\": \"Cheh Chang\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0482697\",\n                    \"name\": \"Siu-Lam Tang\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0490551\",\n                    \"name\": \"Hung-Chuen Lau\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm1784503\",\n                    \"name\": \"Zhihua Dong\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm2889195\",\n                    \"name\": \"Lixin Mu\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm2889365\",\n                    \"name\": \"Yalin Cheng\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm8997306\",\n                    \"name\": \"Dieyi Chen\",\n                    \"category\": \"actress\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5\",\n                \"nVotes\": \"40\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0098267\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Schwarzbunt Märchen\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Schwarzbunt Märchen\",\n                    \"regionAbbrev\": \"XWG\"\n                },\n                {\n                    \"akaTitle\": \"Schwarzbunt Märchen\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0118345\",\n                    \"name\": \"Detlev Buck\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0261373\",\n                    \"name\": \"Michael Esser\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0373494\",\n                    \"name\": \"Roger Heeremann\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0512803\",\n                    \"name\": \"Marc Lingk\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.2\",\n                \"nVotes\": \"46\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0098495\",\n            \"type\": \"movie\",\n            \"originalTitle\": \"Tormozheniye v nebesakh\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/xjpuHD4RWAOLdwN2NdCp0XcqEva.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Comedy\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Freinage dans le ciel\",\n                    \"regionAbbrev\": \"FR\"\n                },\n                {\n                    \"akaTitle\": \"Tormozheniye v nebesakh\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Торможение в небесах\",\n                    \"regionAbbrev\": \"SUHH\"\n                },\n                {\n                    \"akaTitle\": \"Braking in Heaven\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0052451\",\n                    \"name\": \"Vladimir Bannykh\",\n                    \"category\": \"production_designer\"\n                },\n                {\n                    \"nameID\": \"nm0125461\",\n                    \"name\": \"Viktor Buturlin\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0457274\",\n                    \"name\": \"Viktor Kisin\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0476814\",\n                    \"name\": \"Yuriy Kuznetsov\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0514141\",\n                    \"name\": \"Raisa Lisova\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0750850\",\n                    \"name\": \"Nina Ruslanova\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0807055\",\n                    \"name\": \"Viktor Smirnov\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0813215\",\n                    \"name\": \"Roman Solntsev\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0874931\",\n                    \"name\": \"Viktor Tsepaev\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0890581\",\n                    \"name\": \"Vladimir Vasilyev\",\n                    \"category\": \"cinematographer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.3\",\n                \"nVotes\": \"13\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0099427\",\n            \"type\": \"tvEpisode\",\n            \"originalTitle\": \"Dienstvergehen\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Crime\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Dienstvergehen\",\n                    \"regionAbbrev\": \"DE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0126651\",\n                    \"name\": \"Dietmar Bär\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0226290\",\n                    \"name\": \"Wolf Dietrich\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0349616\",\n                    \"name\": \"Rainer Gutjahr\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0450551\",\n                    \"name\": \"Hans Werner Kettenbach\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0508982\",\n                    \"name\": \"Dagmar Lichius\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0589865\",\n                    \"name\": \"Willy Millowitsch\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0618408\",\n                    \"name\": \"Janine Münch\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0699596\",\n                    \"name\": \"Tilo Prückner\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0918188\",\n                    \"name\": \"Hermann Weindorf\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0955055\",\n                    \"name\": \"Gabriela Zerhau\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.4\",\n                \"nVotes\": \"12\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0102255\",\n            \"type\": \"tvEpisode\",\n            \"originalTitle\": \"Winter 1991 - Das Lachen der Maca Daracs\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Winter 1991 - Das Lachen der Maca Daracs\",\n                    \"regionAbbrev\": \"DE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0006945\",\n                    \"name\": \"Helmut Berger\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0041662\",\n                    \"name\": \"Barbara Auer\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0076679\",\n                    \"name\": \"Dieter Berner\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0389238\",\n                    \"name\": \"Pascal Hoffmann\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0622206\",\n                    \"name\": \"Alfred Nathan\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0664144\",\n                    \"name\": \"Nikolaus Paryla\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0754100\",\n                    \"name\": \"Mathias Rüegg\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0842901\",\n                    \"name\": \"Werner Swossil\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0878095\",\n                    \"name\": \"Peter Turrini\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm3879618\",\n                    \"name\": \"Andrea Klem\",\n                    \"category\": \"actress\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"4\",\n                \"nVotes\": \"7\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0103048\",\n            \"type\": \"tvEpisode\",\n            \"originalTitle\": \"Finale am Rothenbaum\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Crime\"\n                },\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Mystery\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Finale am Rothenbaum\",\n                    \"regionAbbrev\": \"DE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0105640\",\n                    \"name\": \"Charles Brauer\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0116253\",\n                    \"name\": \"Irene Brunhöfer\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0252395\",\n                    \"name\": \"Gerd Ekken Gerdes\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0260246\",\n                    \"name\": \"Matthias Esche\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0336111\",\n                    \"name\": \"Konstantin Graudus\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0351357\",\n                    \"name\": \"Frank Göhre\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0444936\",\n                    \"name\": \"Dieter Kehler\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0472545\",\n                    \"name\": \"Manfred Krug\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0686768\",\n                    \"name\": \"Christina Plate\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0705482\",\n                    \"name\": \"Jochen Radermacher\",\n                    \"category\": \"cinematographer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.3\",\n                \"nVotes\": \"60\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0103052\",\n            \"type\": \"tvEpisode\",\n            \"originalTitle\": \"Tod eines Mädchens\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Crime\"\n                },\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Mystery\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Tod eines Mädchens\",\n                    \"regionAbbrev\": \"DE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0081268\",\n                    \"name\": \"Horst Bieber\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0105640\",\n                    \"name\": \"Charles Brauer\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0110258\",\n                    \"name\": \"Klaus Brix\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0184906\",\n                    \"name\": \"Anja Cox\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0472545\",\n                    \"name\": \"Manfred Krug\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0738056\",\n                    \"name\": \"Jürgen Roland\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0836091\",\n                    \"name\": \"Katja Studt\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0956288\",\n                    \"name\": \"Helmut Zierl\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0956501\",\n                    \"name\": \"Hans Zillmann\",\n                    \"category\": \"production_designer\"\n                },\n                {\n                    \"nameID\": \"nm1344468\",\n                    \"name\": \"Michael Gajare\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.6\",\n                \"nVotes\": \"70\"\n            }\n        }\n    }\n]"
						},
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tqueryObject\": {\n        \"titlePart\": \"14232\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchtitle?format=json",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchtitle"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "Can be either json or csv"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "ETag",
									"value": "W/\"29-yNz0z5PEEUAosWra6JctqoCd2Hs\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 21:38:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tqueryObject\": {\n        \"titlepart\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchtitle?format=json",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchtitle"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "Can be either json or csv"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "41"
								},
								{
									"key": "ETag",
									"value": "W/\"29-0ZoW+U1Q8XFwABaFRh0FOKEwSTo\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 21:39:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Missing titlePart parameter\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tqueryObject\": {\n        \"titlePart\": \"he\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/showtitle?format=json",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"showtitle"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "Can be either json or csv"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "ETag",
									"value": "W/\"20-vR0cOg1KTdb3FXDDvNw4n8id4AY\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 21:29:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Endpoint not found\"\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tqueryObject\": {\n        \"titlePart\": \"he\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchtitle?format=json",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchtitle"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "Can be either json or csv"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "94"
								},
								{
									"key": "ETag",
									"value": "W/\"5e-64ymVgGSzk7287Ix+123V4D75FY\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 00:26:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Error in connection to the database\",\n    \"error\": {\n        \"code\": \"ECONNREFUSED\",\n        \"fatal\": true\n    }\n}"
						}
					]
				},
				{
					"name": "get titleObjects by genre",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200){",
									"    pm.test(\"Status code is 200 for successful search\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"Validate search results structure\", function () {",
									"        let jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.be.an('array')",
									"        pm.expect(jsonData.length).to.be.greaterThan(0)",
									"    ",
									"        for (const element of jsonData) {",
									"                let jsonData = pm.response.json();",
									"                let titleObject = element.titleObject;",
									"                pm.test(`Response structure is correct for ${element.titleObject.titleID}`, function () {",
									"                   ",
									"                    ",
									"                    // Check if titleObject is present",
									"                    pm.expect(jsonData).to.be.an(\"array\");",
									"",
									"                    // Validate titleObject structure",
									"                    pm.expect(titleObject).to.have.property(\"titleID\");",
									"                    pm.expect(titleObject).to.have.property(\"type\");",
									"                    pm.expect(titleObject).to.have.property(\"originalTitle\");",
									"                    pm.expect(titleObject).to.have.property(\"titlePoster\");",
									"                    pm.expect(titleObject).to.have.property(\"startYear\");",
									"                    pm.expect(titleObject).to.have.property(\"endYear\");",
									"                    pm.expect(titleObject).to.have.property(\"genres\").that.is.an(\"array\");",
									"                    pm.expect(titleObject).to.have.property(\"titleAkas\").that.is.an(\"array\");",
									"                    pm.expect(titleObject).to.have.property(\"principals\").that.is.an(\"array\");",
									"                    pm.expect(titleObject).to.have.property(\"rating\").that.is.an(\"object\");",
									"            ",
									"                    // Validate nested properties",
									"                    if (titleObject.genres.length > 0) {",
									"                        pm.expect(titleObject.genres[0]).to.have.property(\"genreTitle\").that.is.a(\"string\");",
									"                    }",
									"",
									"                    if (titleObject.titleAkas.length > 0) {",
									"                        pm.expect(titleObject.titleAkas[0]).to.have.property(\"akaTitle\").that.is.a(\"string\");",
									"                        pm.expect(titleObject.titleAkas[0]).to.have.property(\"regionAbbrev\").that.is.a(\"string\");",
									"                    }",
									"",
									"                    if (titleObject.principals.length > 0) {",
									"                        pm.expect(titleObject.principals[0]).to.have.property(\"nameID\").that.is.a(\"string\");",
									"                        pm.expect(titleObject.principals[0]).to.have.property(\"name\").that.is.a(\"string\");",
									"                        pm.expect(titleObject.principals[0]).to.have.property(\"category\").that.is.a(\"string\");",
									"                    }",
									"",
									"                    pm.expect(titleObject.rating).to.have.property(\"avRating\").that.is.a(\"string\");",
									"                    pm.expect(titleObject.rating).to.have.property(\"nVotes\").that.is.a(\"string\");",
									"            });",
									"            ",
									"            pm.test(`Check if the genre is correct for ${element.titleObject.titleID}`, function () {",
									"                // Access the qgenre from the request body",
									"                const qgenre = pm.request.body.raw.match(/\"qgenre\":\\s*\"(.*?)\"/)[1];",
									"",
									"                // Check if there are genres in the response",
									"                if (titleObject.genres.length > 0) {",
									"                    // Use a flag to check if any genreTitle includes qgenre",
									"                    let genreList = [];",
									"                    // Iterate through each genreTitle in the response",
									"                    for (const eachgenre of titleObject.genres) {",
									"                        let genreTitle = eachgenre.genreTitle;",
									"                        genreList.push(genreTitle);",
									"                    }",
									"",
									"                    // Check if any genreTitle includes qgenre",
									"                    pm.expect(genreList).to.include(qgenre);",
									"                } ",
									"            });",
									"           ",
									"            pm.test(`Check if the genre is correct for ${element.titleObject.titleID}`, function () {",
									"                // Access the qgenre from the request body",
									"                const minrating = pm.request.body.raw.match(/\"minrating\":\\s*\"(.*?)\"/)[1];",
									"",
									"                // Check if there are genres in the response",
									"                if (titleObject.rating.length > 0) {",
									"                    // Check if any genreTitle includes qgenre",
									"                    pm.expect(minrating).to.equal.or.greaterThan(titleObject.rating[0].avRating);",
									"                } ",
									"            });",
									"        }",
									"",
									"    });",
									"}",
									"else if (pm.response.code === 204) {",
									"    pm.test('Response status code is 204', function () {",
									"        pm.response.to.have.status(204);",
									"    });",
									"",
									"    pm.test('Response body is empty', function () {",
									"        pm.expect(pm.response.text()).to.be.empty;",
									"    });",
									"",
									"    pm.test('Content-Type header is not present', function () {",
									"        pm.response.to.not.have.header('Content-Type');",
									"    });",
									"",
									"    // Add more specific tests for the 204 No Content response if needed",
									"}",
									"else if(pm.response.code == 400){",
									"    pm.test(\"Response status code is 400\", function () {",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"",
									"",
									"    pm.test(\"Content-Type header is present and has value 'application/json'\", function () {",
									"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"    });",
									"",
									"",
									"    pm.test(\"Response body has a non-empty 'message' field\", function () {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData.message).to.exist.and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gqueryObject\": {\n    \"qgenre\": \"{{qgenre}}\",\n    \"minrating\": \"{{minrating}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/bygenre?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"bygenre"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "format",
									"value": "{{format}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"gqueryObject\": {\n        \"qgenre\": \"Short\",\n        \"minrating\": \"1.0\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/bygenre?format=json",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"bygenre"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "32517"
								},
								{
									"key": "ETag",
									"value": "W/\"7f05-046Lb+w1Mzf2Fm7pxnnCYQw1G48\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 00:25:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0000929\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Klebolin klebt alles\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Comedy\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Willys Streiche: Klebolin klebt alles\",\n                    \"regionAbbrev\": \"DE\"\n                },\n                {\n                    \"akaTitle\": \"Klebolin klebt alles\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Klebolin klebt alles\",\n                    \"regionAbbrev\": \"DE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0066941\",\n                    \"name\": \"Ernst Behmer\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0092290\",\n                    \"name\": \"Curt Bois\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0093361\",\n                    \"name\": \"Heinrich Bolten-Baeckers\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0170183\",\n                    \"name\": \"Victor Colani\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0667386\",\n                    \"name\": \"Charles Paulus\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm1902148\",\n                    \"name\": \"Alfred Duskes\",\n                    \"category\": \"producer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.3\",\n                \"nVotes\": \"46\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0034841\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Hen Hop\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/88EH2TVg6fGK7SnGXcfQ05MD2Rk.jpg\",\n            \"startYear\": \"1994\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Hen Hop\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Hen Hop\",\n                    \"regionAbbrev\": \"FR\"\n                },\n                {\n                    \"akaTitle\": \"To pidima tis kotas\",\n                    \"regionAbbrev\": \"GR\"\n                },\n                {\n                    \"akaTitle\": \"Hen Hop\",\n                    \"regionAbbrev\": \"CA\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0572235\",\n                    \"name\": \"Norman McLaren\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.3\",\n                \"nVotes\": \"282\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0040844\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Crossroads of Laredo\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/atrGjxMSp6y4jvs7nojUrlsGFUb.jpg\",\n            \"startYear\": \"1995\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                },\n                {\n                    \"genreTitle\": \"Western\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Crossroads of Laredo\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"The Streets of Laredo\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"Crossroads of Laredo\",\n                    \"regionAbbrev\": \"US\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0000248\",\n                    \"name\": \"Edward D. Wood Jr.\",\n                    \"category\": \"actor, director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0282325\",\n                    \"name\": \"Ray Flin\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0298215\",\n                    \"name\": \"Dolores Fuller\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0564502\",\n                    \"name\": \"Ruth McCabe\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0601146\",\n                    \"name\": \"Duke Moore\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0619265\",\n                    \"name\": \"Don Nagel\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0858659\",\n                    \"name\": \"Crawford John Thomas\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0918840\",\n                    \"name\": \"Ben Weisman\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"3.3\",\n                \"nVotes\": \"189\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0078006\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Norman and the Killer\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Horror\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Norman and the Killer\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"Norman and the Killer\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0000035\",\n                    \"name\": \"James Horner\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0244139\",\n                    \"name\": \"John Durren\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0333937\",\n                    \"name\": \"Bob Graham\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0370209\",\n                    \"name\": \"Richard L. Hawkins\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0455130\",\n                    \"name\": \"Peggy King\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0625196\",\n                    \"name\": \"Brett Nelson\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0643093\",\n                    \"name\": \"Joyce Carol Oates\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0682421\",\n                    \"name\": \"Lynn Thomas Pierce\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0703605\",\n                    \"name\": \"Kate Quillan\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0730372\",\n                    \"name\": \"Jane Marla Robbins\",\n                    \"category\": \"actress\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7\",\n                \"nVotes\": \"33\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0082473\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Great Barrier Reef\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/woteaQKihwadpEr7XXxyt6aAd0v.jpg\",\n            \"startYear\": \"1999\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"The Great Barrier Reef\",\n                    \"regionAbbrev\": \"GB\"\n                },\n                {\n                    \"akaTitle\": \"IMAX: The Great Barrier Reef\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"A korallok birodalma\",\n                    \"regionAbbrev\": \"HU\"\n                },\n                {\n                    \"akaTitle\": \"Great Barrier Reef\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"The Great Barrier Reef\",\n                    \"regionAbbrev\": \"XWW\"\n                },\n                {\n                    \"akaTitle\": \"Great Barrier Reef\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"The Great Barrier Reef\",\n                    \"regionAbbrev\": \"US\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0044011\",\n                    \"name\": \"Rosalind Ayres\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0143426\",\n                    \"name\": \"George Casey\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0164950\",\n                    \"name\": \"Philip L. Clarke\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0347858\",\n                    \"name\": \"David Gulpilil\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0403174\",\n                    \"name\": \"Tim Huntley\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0637280\",\n                    \"name\": \"Paul Novros\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0724255\",\n                    \"name\": \"Mose Richards\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0938101\",\n                    \"name\": \"Mal Wolfe\",\n                    \"category\": \"cinematographer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.7\",\n                \"nVotes\": \"120\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0082891\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Peep Show\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/c4AFJyVdaJ4Rglg5d4qKibY8CEM.jpg\",\n            \"startYear\": \"1992\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Peep Show\",\n                    \"regionAbbrev\": \"CA\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0000382\",\n                    \"name\": \"Atom Egoyan\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm1276357\",\n                    \"name\": \"Claire Letemendia\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm1362494\",\n                    \"name\": \"John Ball\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm2236018\",\n                    \"name\": \"David Littlejohn\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm2236469\",\n                    \"name\": \"Randy Milks\",\n                    \"category\": \"actor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.5\",\n                \"nVotes\": \"250\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0084447\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Open House\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1992\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Open House\",\n                    \"regionAbbrev\": \"CA\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0000382\",\n                    \"name\": \"Atom Egoyan\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0146945\",\n                    \"name\": \"Sharon Cavanaugh\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0203219\",\n                    \"name\": \"Alberta Davidson\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0292058\",\n                    \"name\": \"Aaron Ross Fraser\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0582650\",\n                    \"name\": \"Peter Mettler\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0737962\",\n                    \"name\": \"David Rokeby\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm1558060\",\n                    \"name\": \"Bruce Bell\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm2235804\",\n                    \"name\": \"Hovsep Yeghoyan\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm7896911\",\n                    \"name\": \"Michael Marshall\",\n                    \"category\": \"actor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.2\",\n                \"nVotes\": \"204\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0084638\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Scenes from the Life of Andy Warhol: Friendships and Intersections\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/avHpCWc17IYJZqifb7bSQI2OqC9.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Сцены из жизни Энди Уорхола\",\n                    \"regionAbbrev\": \"SUHH\"\n                },\n                {\n                    \"akaTitle\": \"Warhol privat\",\n                    \"regionAbbrev\": \"DE\"\n                },\n                {\n                    \"akaTitle\": \"Scenes from the Life of Andy Warhol: Friendships and Intersections\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"Cenas da Vida de Andy Warhol: Amizades e Interseções\",\n                    \"regionAbbrev\": \"BR\"\n                },\n                {\n                    \"akaTitle\": \"Scenes from the Life of Andy Warhol: Friendships and Intersections\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Escenas de la vida de Andy Warhol\",\n                    \"regionAbbrev\": \"VE\"\n                },\n                {\n                    \"akaTitle\": \"Σκηνές από τη ζωή του Άντι Γουόρχολ: Φιλίες και συναντήσεις\",\n                    \"regionAbbrev\": \"GR\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0001396\",\n                    \"name\": \"Mick Jagger\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0006168\",\n                    \"name\": \"John Lennon\",\n                    \"category\": \"archive_footage\"\n                },\n                {\n                    \"nameID\": \"nm0129816\",\n                    \"name\": \"John Cale\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0320091\",\n                    \"name\": \"Allen Ginsberg\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0447882\",\n                    \"name\": \"John Kennedy Jr.\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0538922\",\n                    \"name\": \"Gerard Malanga\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0577263\",\n                    \"name\": \"Jonas Mekas\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0607316\",\n                    \"name\": \"Sterling Morrison\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0630113\",\n                    \"name\": \"Nico\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0912238\",\n                    \"name\": \"Andy Warhol\",\n                    \"category\": \"archive_footage\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.9\",\n                \"nVotes\": \"420\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0090144\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Le temps des bouffons\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/7PVsQkiQsMf5j4pviQgEKJh4BPo.jpg\",\n            \"startYear\": \"1993\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Le temps des bouffons\",\n                    \"regionAbbrev\": \"CA\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0265853\",\n                    \"name\": \"Pierre Falardeau\",\n                    \"category\": \"actor, director\"\n                },\n                {\n                    \"nameID\": \"nm10165788\",\n                    \"name\": \"Roger D. Landry\",\n                    \"category\": \"self\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"8.1\",\n                \"nVotes\": \"233\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0091490\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Martina's Playhouse\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1993\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Martina's Playhouse\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Martina's Playhouse\",\n                    \"regionAbbrev\": \"US\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0014411\",\n                    \"name\": \"Peggy Ahwesh\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0599806\",\n                    \"name\": \"Jennifer Montgomery\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm1293725\",\n                    \"name\": \"Martina Meijer Torr\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm2616328\",\n                    \"name\": \"Diana Torr\",\n                    \"category\": \"self\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.5\",\n                \"nVotes\": \"41\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0093211\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Horrorshow\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Horror\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Horrorshow\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Horrorshow\",\n                    \"regionAbbrev\": \"GB\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0285970\",\n                    \"name\": \"Eden Ford\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0343149\",\n                    \"name\": \"Jim Groom\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0366594\",\n                    \"name\": \"Paul Hart-Wilden\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0713818\",\n                    \"name\": \"David Read\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm2027528\",\n                    \"name\": \"Rebecca Rosengard\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm2032474\",\n                    \"name\": \"Gary Looke\",\n                    \"category\": \"actor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.1\",\n                \"nVotes\": \"10\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0093646\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Nonstop\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/iFIazBvTyM9e2U79RTKmoG3qrzp.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Nonstop\",\n                    \"regionAbbrev\": \"FI\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0382175\",\n                    \"name\": \"Klaus Heydemann\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0386744\",\n                    \"name\": \"Tahvo Hirvonen\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0631741\",\n                    \"name\": \"Esko Nikkari\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0657722\",\n                    \"name\": \"Kari Paljakka\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0661081\",\n                    \"name\": \"Alvaro Pardo\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0750234\",\n                    \"name\": \"Carl-Kristian Rundman\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0798071\",\n                    \"name\": \"Armi Sillanpää\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm1531811\",\n                    \"name\": \"Hanoi Rocks\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm2963810\",\n                    \"name\": \"Jane Sarlund\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm4615814\",\n                    \"name\": \"Jussi Hirvi\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7.9\",\n                \"nVotes\": \"20\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0094390\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Zwisch!\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/mEzDaxLYnPfl7Vp1iRVgAoFBAZu.jpg\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Swisch\",\n                    \"regionAbbrev\": \"SE\"\n                },\n                {\n                    \"akaTitle\": \"Zwisch!\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Zwisch!\",\n                    \"regionAbbrev\": \"NO\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0803393\",\n                    \"name\": \"Thor Sivertsen\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.2\",\n                \"nVotes\": \"22\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0095147\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Feet of Song\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/uvZkYcmdV68z0yjMGkQ2TLITzs6.jpg\",\n            \"startYear\": \"1992\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Musical\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Feet of Song\",\n                    \"regionAbbrev\": \"GB\"\n                },\n                {\n                    \"akaTitle\": \"Feet of Song\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0052346\",\n                    \"name\": \"Alfred Bannerman\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0366198\",\n                    \"name\": \"Charlie Hart\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0492416\",\n                    \"name\": \"Gasper Lawal\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0751133\",\n                    \"name\": \"Erica Russell\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0832523\",\n                    \"name\": \"Lee Stork\",\n                    \"category\": \"producer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.7\",\n                \"nVotes\": \"90\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0095229\",\n            \"type\": \"short\",\n            \"originalTitle\": \"God morgon Gerda Gök\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/bKa44cUbDrMGXqTrV6ZVbKIEDNA.jpg\",\n            \"startYear\": \"1993\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Family\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"God morgon Gerda Gök\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Huomenta, Kerttu Käki\",\n                    \"regionAbbrev\": \"FI\"\n                },\n                {\n                    \"akaTitle\": \"God morgon Gerda Gök\",\n                    \"regionAbbrev\": \"SE\"\n                },\n                {\n                    \"akaTitle\": \"God Morron\",\n                    \"regionAbbrev\": \"SE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0414842\",\n                    \"name\": \"Gun Jacobson\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm1589697\",\n                    \"name\": \"Lotta Strömblad\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.7\",\n                \"nVotes\": \"21\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0095571\",\n            \"type\": \"short\",\n            \"originalTitle\": \"The Making of Monsters\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/zgenzvJ09QuRaduURuBuQzmM4jy.jpg\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"The Making of Monsters\",\n                    \"regionAbbrev\": \"CA\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0026523\",\n                    \"name\": \"Christopher Anderson\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0036732\",\n                    \"name\": \"Stewart Arnott\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0340742\",\n                    \"name\": \"John Greyson\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0417284\",\n                    \"name\": \"Miume Jan\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0528508\",\n                    \"name\": \"Laurie Lynd\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0532024\",\n                    \"name\": \"Lee MacDougall\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0770765\",\n                    \"name\": \"Glenn Schellenberg\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"8.4\",\n                \"nVotes\": \"41\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0096107\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Seven Days a Week - CITY LIFE - Warsaw\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                },\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Семь дней недели\",\n                    \"regionAbbrev\": \"SUHH\"\n                },\n                {\n                    \"akaTitle\": \"Επτά μέρες τη βδομάδα\",\n                    \"regionAbbrev\": \"GR\"\n                },\n                {\n                    \"akaTitle\": \"La semaine de sept jours\",\n                    \"regionAbbrev\": \"FR\"\n                },\n                {\n                    \"akaTitle\": \"Siedem dni w tygodniu\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Seven Days a Week - CITY LIFE - Warsaw\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Seven Days a Week\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Siedem dni w tygodniu -City Life - Warszawa\",\n                    \"regionAbbrev\": \"NL\"\n                },\n                {\n                    \"akaTitle\": \"Seven Days a Week - CITY LIFE - Warsaw\",\n                    \"regionAbbrev\": \"PL\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0001425\",\n                    \"name\": \"Krzysztof Kieslowski\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0678456\",\n                    \"name\": \"Jacek Petrycki\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0726914\",\n                    \"name\": \"Dirk Rijneke\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0887376\",\n                    \"name\": \"Mildred Van Leeuwaarden\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0912027\",\n                    \"name\": \"Dorota Wardeszkiewicz\",\n                    \"category\": \"editor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.8\",\n                \"nVotes\": \"605\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0096254\",\n            \"type\": \"short\",\n            \"originalTitle\": \"That Burning Question\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"That Burning Question\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"That Burning Question\",\n                    \"regionAbbrev\": \"US\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0000491\",\n                    \"name\": \"John Leguizamo\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0057062\",\n                    \"name\": \"Andrew Lee Barrett\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0102074\",\n                    \"name\": \"Markley Boyer\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0220865\",\n                    \"name\": \"Joe DeSalvo\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0486824\",\n                    \"name\": \"Kate Lanier\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0851930\",\n                    \"name\": \"Alan Taylor\",\n                    \"category\": \"director, writer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7\",\n                \"nVotes\": \"27\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097057\",\n            \"type\": \"short\",\n            \"originalTitle\": \"The Child Eater\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/n75gNLjoIWmsW2WIiWqkRZTJMAs.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"The Child Eater\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"The Child Eater\",\n                    \"regionAbbrev\": \"GB\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0035605\",\n                    \"name\": \"Alun Armstrong\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0141572\",\n                    \"name\": \"Deborah Carter\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0147699\",\n                    \"name\": \"Jonathan Cecil\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0188928\",\n                    \"name\": \"Anna Cropper\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0242026\",\n                    \"name\": \"Lindsay Duncan\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0499589\",\n                    \"name\": \"Jason Lehel\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0636608\",\n                    \"name\": \"Julian Nott\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0712625\",\n                    \"name\": \"Terry Rawlings\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0848734\",\n                    \"name\": \"Jonathan Tammuz\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm3072333\",\n                    \"name\": \"Lib Stephen\",\n                    \"category\": \"writer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.6\",\n                \"nVotes\": \"44\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097310\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Ex libris\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Ex libris\",\n                    \"regionAbbrev\": \"SE\"\n                },\n                {\n                    \"akaTitle\": \"Ex libris\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0106601\",\n                    \"name\": \"Gösta Bredefeldt\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0356441\",\n                    \"name\": \"Malena Hallerdt\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0511300\",\n                    \"name\": \"Thomas Lindahl\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0648108\",\n                    \"name\": \"Mats Olof Olsson\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0845556\",\n                    \"name\": \"Lena Söderström\",\n                    \"category\": \"production_designer\"\n                },\n                {\n                    \"nameID\": \"nm0874272\",\n                    \"name\": \"Lil Trulsson\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm13887837\",\n                    \"name\": \"Niclas Ljungquist\",\n                    \"category\": \"actor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.7\",\n                \"nVotes\": \"7\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097362\",\n            \"type\": \"short\",\n            \"originalTitle\": \"The First Emperor of China\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/5yQfgwPYCazfLhLoXpxsx0YYlFt.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Le premier empereur de Chine\",\n                    \"regionAbbrev\": \"CA\"\n                },\n                {\n                    \"akaTitle\": \"El primer emperador de China\",\n                    \"regionAbbrev\": \"ES\"\n                },\n                {\n                    \"akaTitle\": \"The First Emperor of China\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0001626\",\n                    \"name\": \"Christopher Plummer\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0242086\",\n                    \"name\": \"Robert A. Duncan\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0307672\",\n                    \"name\": \"Michel Garneau\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0406349\",\n                    \"name\": \"Tony Ianzelo\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0432419\",\n                    \"name\": \"Bo Guan Jun\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm1847770\",\n                    \"name\": \"Liu Hao Xue\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm1848061\",\n                    \"name\": \"Pan Han Ci\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm1852137\",\n                    \"name\": \"Liu Yun Hui\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm9928014\",\n                    \"name\": \"Guoren Wang\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm9928038\",\n                    \"name\": \"Wong Ji Cheng\",\n                    \"category\": \"writer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.2\",\n                \"nVotes\": \"102\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097509\",\n            \"type\": \"short\",\n            \"originalTitle\": \"The Hill Farm\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/2DeO5VwMoHCZ5lUIQwAlJp3e7Fx.jpg\",\n            \"startYear\": \"1992\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"The Hill Farm\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"The Hill Farm\",\n                    \"regionAbbrev\": \"GB\"\n                },\n                {\n                    \"akaTitle\": \"La granja de la colina\",\n                    \"regionAbbrev\": \"AR\"\n                },\n                {\n                    \"akaTitle\": \"Farm a hegyen\",\n                    \"regionAbbrev\": \"HU\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0048735\",\n                    \"name\": \"Mark Baker\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0462603\",\n                    \"name\": \"Annie Kocur\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0636608\",\n                    \"name\": \"Julian Nott\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.7\",\n                \"nVotes\": \"307\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097558\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Ident\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/9RzNNJxAuHGrAf4kw35lZ1Ry5mM.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Lip synch: Ident\",\n                    \"regionAbbrev\": \"SE\"\n                },\n                {\n                    \"akaTitle\": \"Ident\",\n                    \"regionAbbrev\": \"GB\"\n                },\n                {\n                    \"akaTitle\": \"Ident\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"アイデントの正体\",\n                    \"regionAbbrev\": \"JP\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0326450\",\n                    \"name\": \"Richard Starzak\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0330627\",\n                    \"name\": \"Stuart Gordon\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0566515\",\n                    \"name\": \"David McCormick\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0612455\",\n                    \"name\": \"Sara Mullock\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0629298\",\n                    \"name\": \"Phil Nice\",\n                    \"category\": \"actor, writer\"\n                },\n                {\n                    \"nameID\": \"nm0725725\",\n                    \"name\": \"Dave Alex Riddett\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0807364\",\n                    \"name\": \"Arthur Smith\",\n                    \"category\": \"actor, writer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.5\",\n                \"nVotes\": \"227\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097783\",\n            \"type\": \"tvEpisode\",\n            \"originalTitle\": \"The Lounge Bar\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"The Lounge Bar\",\n                    \"regionAbbrev\": \"GB\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0003016\",\n                    \"name\": \"John Gilbert\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0132492\",\n                    \"name\": \"Grant Campbell\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0569429\",\n                    \"name\": \"Don McGlashan\",\n                    \"category\": \"actor, director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0621274\",\n                    \"name\": \"Leon Narbey\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0790606\",\n                    \"name\": \"Lucy Sheehan\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0801625\",\n                    \"name\": \"Harry Sinclair\",\n                    \"category\": \"actor, director, writer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7.4\",\n                \"nVotes\": \"126\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097966\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Next\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/hlei6WySTYX1KuUHQ7RDCtWurx7.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Next\",\n                    \"regionAbbrev\": \"GB\"\n                },\n                {\n                    \"akaTitle\": \"Next: The Infinite Variety Show\",\n                    \"regionAbbrev\": \"XWW\"\n                },\n                {\n                    \"akaTitle\": \"Next\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"ネクスト（1989）\",\n                    \"regionAbbrev\": \"JP\"\n                },\n                {\n                    \"akaTitle\": \"Lip synch: Next\",\n                    \"regionAbbrev\": \"SE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0000636\",\n                    \"name\": \"William Shakespeare\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0307997\",\n                    \"name\": \"Helen Garrard\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0330627\",\n                    \"name\": \"Stuart Gordon\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0566515\",\n                    \"name\": \"David McCormick\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0612455\",\n                    \"name\": \"Sara Mullock\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0701000\",\n                    \"name\": \"Barry Purves\",\n                    \"category\": \"actor, director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0715953\",\n                    \"name\": \"Roger Rees\",\n                    \"category\": \"actor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7.4\",\n                \"nVotes\": \"277\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0097970\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Night Cries: A Rural Tragedy\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/xtduPHL6hRlR9VEsj6EY2Ua16vr.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Night Cries: A Rural Tragedy\",\n                    \"regionAbbrev\": \"AU\"\n                },\n                {\n                    \"akaTitle\": \"Night Cries: A Rural Tragedy\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0280168\",\n                    \"name\": \"Alkira Fitzgerald\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0313133\",\n                    \"name\": \"Elizabeth Gentle\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0362528\",\n                    \"name\": \"Agnes Hardwick\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0367680\",\n                    \"name\": \"Phillippa Harvey\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0486740\",\n                    \"name\": \"Marcia Langton\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0567944\",\n                    \"name\": \"Penny McDonald\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0595618\",\n                    \"name\": \"Tracey Moffatt\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0926508\",\n                    \"name\": \"John Whitteron\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm1188003\",\n                    \"name\": \"Jimmy Little\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm4004354\",\n                    \"name\": \"Liam Wridgeway\",\n                    \"category\": \"actor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6\",\n                \"nVotes\": \"292\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0098267\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Schwarzbunt Märchen\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Schwarzbunt Märchen\",\n                    \"regionAbbrev\": \"XWG\"\n                },\n                {\n                    \"akaTitle\": \"Schwarzbunt Märchen\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0118345\",\n                    \"name\": \"Detlev Buck\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0261373\",\n                    \"name\": \"Michael Esser\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0373494\",\n                    \"name\": \"Roger Heeremann\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0512803\",\n                    \"name\": \"Marc Lingk\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.2\",\n                \"nVotes\": \"46\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0098392\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Der Strandpirat\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Der Strandpirat\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Der Strandpirat\",\n                    \"regionAbbrev\": \"XWG\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0194422\",\n                    \"name\": \"Susanne Czepl\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0349654\",\n                    \"name\": \"Michael Gutmann\",\n                    \"category\": \"actor, director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0389238\",\n                    \"name\": \"Pascal Hoffmann\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0487110\",\n                    \"name\": \"Leonard Lansink\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0517351\",\n                    \"name\": \"Knut Loewe\",\n                    \"category\": \"production_designer\"\n                },\n                {\n                    \"nameID\": \"nm0584906\",\n                    \"name\": \"Rainer Michel\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm2827407\",\n                    \"name\": \"Anna Klusen\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm3990931\",\n                    \"name\": \"Philine Düssel\",\n                    \"category\": \"actress\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6\",\n                \"nVotes\": \"10\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0098634\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Western\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                },\n                {\n                    \"genreTitle\": \"Western\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Western\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Western\",\n                    \"regionAbbrev\": \"HU\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0393031\",\n                    \"name\": \"Gábor Homolya\",\n                    \"category\": \"director, writer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.8\",\n                \"nVotes\": \"56\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0098962\",\n            \"type\": \"short\",\n            \"originalTitle\": \"12:01 PM\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/sBWKO6xnzAxnXCup7JENu15ZIoV.jpg\",\n            \"startYear\": \"1991\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Sci-Fi\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                },\n                {\n                    \"genreTitle\": \"Thriller\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"12:01 PM\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"12:01 PM\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"12:01 дня\",\n                    \"regionAbbrev\": \"SUHH\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0006809\",\n                    \"name\": \"Stephen Tolkin\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0017468\",\n                    \"name\": \"Jane Alden\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0024596\",\n                    \"name\": \"Don Amendolia\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0045402\",\n                    \"name\": \"John Bachelder\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0364307\",\n                    \"name\": \"Laura Harrington\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0372421\",\n                    \"name\": \"Jonathan Heap\",\n                    \"category\": \"director, writer\"\n                },\n                {\n                    \"nameID\": \"nm0468009\",\n                    \"name\": \"Teresa E. Kounin\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0509372\",\n                    \"name\": \"Charlie Lieberman\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0526981\",\n                    \"name\": \"Richard Lupoff\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0577755\",\n                    \"name\": \"Stephen Melillo\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7.6\",\n                \"nVotes\": \"1467\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0098997\",\n            \"type\": \"short\",\n            \"originalTitle\": \"L'âge de plastic\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"L'âge de plastic\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"L'âge de plastic\",\n                    \"regionAbbrev\": \"FR\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0468007\",\n                    \"name\": \"Jan Kounen\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0688596\",\n                    \"name\": \"Jean Poisson\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm1022263\",\n                    \"name\": \"Karen Strassman\",\n                    \"category\": \"actress\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.1\",\n                \"nVotes\": \"20\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0099006\",\n            \"type\": \"short\",\n            \"originalTitle\": \"The Air Globes\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"The Air Globes\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"The Air Globes\",\n                    \"regionAbbrev\": \"\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0136603\",\n                    \"name\": \"Patricia Cardoso\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"8.4\",\n                \"nVotes\": \"14\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0099023\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Les amateurs\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Les amateurs\",\n                    \"regionAbbrev\": \"CH\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0006357\",\n                    \"name\": \"Daniel Schmid\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0734595\",\n                    \"name\": \"Daniela Roderer\",\n                    \"category\": \"editor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7.4\",\n                \"nVotes\": \"5\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0099058\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Armenia\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Armenia\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Armenia\",\n                    \"regionAbbrev\": \"AT\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0335875\",\n                    \"name\": \"Helmut Grasser\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0511730\",\n                    \"name\": \"Max Linder\",\n                    \"category\": \"director, writer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.4\",\n                \"nVotes\": \"33\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0099105\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Barbie Digs Joe\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Barbie Digs Joe\",\n                    \"regionAbbrev\": \"SG\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0451799\",\n                    \"name\": \"Eric Khoo\",\n                    \"category\": \"director\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"6.1\",\n                \"nVotes\": \"8\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0099115\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Die Beichte\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/ui9yFovcSvj67D2WC9dxrJHfXBR.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Animation\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Die Beichte\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Die Beichte\",\n                    \"regionAbbrev\": \"DE\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0383973\",\n                    \"name\": \"Burkhard Hilgenstock\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0474119\",\n                    \"name\": \"Jochen Kuhn\",\n                    \"category\": \"actor, director, writer\"\n                },\n                {\n                    \"nameID\": \"nm1137285\",\n                    \"name\": \"Olaf Meltzer\",\n                    \"category\": \"editor\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"5.2\",\n                \"nVotes\": \"11\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0099158\",\n            \"type\": \"short\",\n            \"originalTitle\": \"Blue Planet\",\n            \"titlePoster\": \"https://image.tmdb.org/t/p/{width_variable}/1G33v3homFEZoPzjSxPalnhCE0g.jpg\",\n            \"startYear\": \"1990\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Documentary\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Голубая планета\",\n                    \"regionAbbrev\": \"SUHH\"\n                },\n                {\n                    \"akaTitle\": \"Den blå planet\",\n                    \"regionAbbrev\": \"DK\"\n                },\n                {\n                    \"akaTitle\": \"Den blå planeten\",\n                    \"regionAbbrev\": \"SE\"\n                },\n                {\n                    \"akaTitle\": \"Blue Planet\",\n                    \"regionAbbrev\": \"GR\"\n                },\n                {\n                    \"akaTitle\": \"Blue Planet\",\n                    \"regionAbbrev\": \"US\"\n                },\n                {\n                    \"akaTitle\": \"Blue Planet\",\n                    \"regionAbbrev\": \"\"\n                },\n                {\n                    \"akaTitle\": \"Kék bolygó\",\n                    \"regionAbbrev\": \"HU\"\n                },\n                {\n                    \"akaTitle\": \"Planeta azul\",\n                    \"regionAbbrev\": \"ES\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0118209\",\n                    \"name\": \"James Buchli\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0123785\",\n                    \"name\": \"Ben Burtt\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0235010\",\n                    \"name\": \"David Douglas\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0258646\",\n                    \"name\": \"Micky Erbe\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0272445\",\n                    \"name\": \"Graeme Ferguson\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"nameID\": \"nm0616880\",\n                    \"name\": \"Toni Myers\",\n                    \"category\": \"actress, writer\"\n                },\n                {\n                    \"nameID\": \"nm0624648\",\n                    \"name\": \"James Neihouse\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0813389\",\n                    \"name\": \"Maribeth Solomon\",\n                    \"category\": \"composer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"7.1\",\n                \"nVotes\": \"795\"\n            }\n        }\n    },\n    {\n        \"titleObject\": {\n            \"titleID\": \"tt0101480\",\n            \"type\": \"tvEpisode\",\n            \"originalTitle\": \"Blood Brothers: The Joey DiPaolo Story\",\n            \"titlePoster\": \"\",\n            \"startYear\": \"1992\",\n            \"endYear\": \"\",\n            \"genres\": [\n                {\n                    \"genreTitle\": \"Drama\"\n                },\n                {\n                    \"genreTitle\": \"Family\"\n                },\n                {\n                    \"genreTitle\": \"Short\"\n                }\n            ],\n            \"titleAkas\": [\n                {\n                    \"akaTitle\": \"Blood Brothers: The Joey DiPaolo Story\",\n                    \"regionAbbrev\": \"US\"\n                }\n            ],\n            \"principals\": [\n                {\n                    \"nameID\": \"nm0032628\",\n                    \"name\": \"Amy Aquino\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"nameID\": \"nm0364643\",\n                    \"name\": \"Dorian Harris\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"nameID\": \"nm0392694\",\n                    \"name\": \"Willy Holtzman\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"nameID\": \"nm0492220\",\n                    \"name\": \"Adam LaVorgna\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0534944\",\n                    \"name\": \"James Madio\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"nameID\": \"nm0685673\",\n                    \"name\": \"Dean Pitchford\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"nameID\": \"nm0795724\",\n                    \"name\": \"Daniel Shulman\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"nameID\": \"nm0811330\",\n                    \"name\": \"Tom Snow\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"nameID\": \"nm0852753\",\n                    \"name\": \"Lawrence Taylor\",\n                    \"category\": \"self\"\n                },\n                {\n                    \"nameID\": \"nm0952781\",\n                    \"name\": \"Meredith Zamsky\",\n                    \"category\": \"producer\"\n                }\n            ],\n            \"rating\": {\n                \"avRating\": \"8\",\n                \"nVotes\": \"62\"\n            }\n        }\n    }\n]"
						},
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gqueryObject\": {\n    \"qgenre\": \"Horrorshow\",\n    \"minrating\": \"1\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/bygenre?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"bygenre"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "ETag",
									"value": "W/\"29-yNz0z5PEEUAosWra6JctqoCd2Hs\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 22:52:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gqueryObject\": {\n    \"qgenree\": \"{{qgenre}}\",\n    \"minrating\": \"{{minrating}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/bygenre?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"bygenre"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "61"
								},
								{
									"key": "ETag",
									"value": "W/\"3d-GdCUv9Te8WXXty3cvdXDBA6C9oY\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 23:01:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Missing genre or minrating object request param\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gqueryObject\": {\n    \"qgenre\": \"{{qgenre}}\",\n    \"minrating\": \"{{minrating}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/genre?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"genre"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "ETag",
									"value": "W/\"20-vR0cOg1KTdb3FXDDvNw4n8id4AY\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 22:57:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Endpoint not found\"\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"gqueryObject\": {\n    \"qgenre\": \"{{qgenre}}\",\n    \"minrating\": \"{{minrating}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/bygenre?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"bygenre"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "94"
								},
								{
									"key": "ETag",
									"value": "W/\"5e-64ymVgGSzk7287Ix+123V4D75FY\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 00:27:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Error in connection to the database\",\n    \"error\": {\n        \"code\": \"ECONNREFUSED\",\n        \"fatal\": true\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "name endpoints",
			"item": [
				{
					"name": "get nameObject by nameID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"",
									"    pm.test(\"Response status code is 200\", function () {",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"",
									"    pm.test(\"Validate person information structure\", function () {",
									"        let jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.have.property(\"nameObject\");",
									"",
									"        let nameObject = jsonData.nameObject;",
									"",
									"        // Validate properties of nameObject",
									"        pm.expect(nameObject).to.have.property(\"nameID\").that.is.a(\"string\");",
									"",
									"        pm.expect(nameObject).to.have.property(\"name\").that.is.a(\"string\");",
									"",
									"        pm.expect(nameObject).to.have.property(\"namePoster\").that.is.a(\"string\");",
									"",
									"        pm.expect(nameObject).to.have.property(\"birthYr\").that.is.a(\"string\");",
									"",
									"        pm.expect(nameObject).to.have.property(\"deathYr\").that.satisfies(val => val === null || typeof val === 'string');",
									"",
									"        pm.expect(nameObject).to.have.property(\"profession\").that.is.a(\"string\");",
									"",
									"        pm.expect(nameObject).to.have.property(\"nameTitles\").that.is.an(\"array\");",
									"",
									"        // Validate the structure of the first item in the nameTitles array",
									"        if (nameObject.nameTitles.length > 0) {",
									"            let firstTitle = nameObject.nameTitles[0];",
									"            pm.expect(firstTitle).to.have.property(\"titleID\").that.is.a(\"string\");",
									"            pm.expect(firstTitle).to.have.property(\"category\").that.is.a(\"string\");",
									"        }",
									"    });",
									"",
									"    pm.test(\"We get the correct nameObject\", function() {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData.nameObject.nameID).to.equal(pm.variables.get(\"nameID\"));",
									"    });",
									"}",
									"else if (pm.response.code === 204) {",
									"    pm.test('Response status code is 204', function () {",
									"        pm.response.to.have.status(204);",
									"    });",
									"",
									"    pm.test('Response body is empty', function () {",
									"        pm.expect(pm.response.text()).to.be.empty;",
									"    });",
									"",
									"    pm.test('Content-Type header is not present', function () {",
									"        pm.response.to.not.have.header('Content-Type');",
									"    });",
									"}",
									"else if(pm.response.code == 400){",
									"    pm.test(\"Response status code is 400\", function () {",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"",
									"",
									"    pm.test(\"Content-Type header is present and has value 'application/json'\", function () {",
									"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"    });",
									"",
									"",
									"    pm.test(\"Response body has a non-empty 'message' field\", function () {",
									"        const responseData = pm.response.json();",
									"        pm.expect(responseData.message).to.exist.and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/name/:nameID?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"name",
								":nameID"
							],
							"query": [
								{
									"key": "format",
									"value": "{{format}}",
									"description": "Can be either json or csv"
								}
							],
							"variable": [
								{
									"key": "nameID",
									"value": "{{nameID}}",
									"description": "nconst"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/name/:nameID?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"name",
										":nameID"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}",
											"description": "Can be either json or csv"
										}
									],
									"variable": [
										{
											"key": "nameID",
											"value": "nm0000019"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "282"
								},
								{
									"key": "ETag",
									"value": "W/\"11a-5msSOpYDXk0yyFYLhfGMaKeGEC8\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 00:23:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"nameObject\": {\n        \"nameID\": \"nm0000019\",\n        \"name\": \"Federico Fellini\",\n        \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/jH2VnHAuI0UbTWsnrjMPro0fC9j.jpg\",\n        \"birthYr\": 1920,\n        \"deathYr\": 1993,\n        \"profession\": \"actor,director,writer\",\n        \"nameTitles\": [\n            {\n                \"titleID\": \"tt0098606\",\n                \"category\": \"director\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/name/:nameID?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"name",
										":nameID"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}",
											"description": "Can be either json or csv"
										}
									],
									"variable": [
										{
											"key": "nameID",
											"value": "nm00000"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "ETag",
									"value": "W/\"1e-BBXKGI8yKrHMxcNXkuFRAHS0nDE\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 23:27:40 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/name/:nameID?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"name",
										":nameID"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}"
										}
									],
									"variable": [
										{
											"key": "nameID",
											"value": "1234345"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "68"
								},
								{
									"key": "ETag",
									"value": "W/\"44-N9lixcM40lajuaGZGbc1OACEs18\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 00:23:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid nameID parameter! namedID should start with nm\"\n}"
						},
						{
							"name": "400 Bad Request v2",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/name/:nameID?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"name",
										":nameID"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}"
										}
									],
									"variable": [
										{
											"key": "nameID",
											"value": ""
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "68"
								},
								{
									"key": "ETag",
									"value": "W/\"44-N9lixcM40lajuaGZGbc1OACEs18\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 00:23:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid nameID parameter! namedID should start with nm\"\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/name/:nameID?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"name",
										":nameID"
									],
									"query": [
										{
											"key": "format",
											"value": "{{format}}",
											"description": "Can be either json or csv"
										}
									],
									"variable": [
										{
											"key": "nameID",
											"value": "{{nameID}}",
											"description": "nconst"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "49"
								},
								{
									"key": "ETag",
									"value": "W/\"31-KG0nA0usp2kEFGevFWQmJz2a1tM\""
								},
								{
									"key": "Date",
									"value": "Sun, 18 Feb 2024 19:15:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Error in connection to the database\"\n}"
						}
					]
				},
				{
					"name": "get list of nameObjects by namePart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){\r",
									"\r",
									"    pm.test(\"Response status code is 200\", function () {\r",
									"        pm.expect(pm.response.code).to.equal(200);\r",
									"    });\r",
									"\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.be.greaterThan(0);\r",
									"    for(const element of jsonData){\r",
									"        pm.test(\"Validate person information structure\", function () {\r",
									"            let jsonData = pm.response.json();\r",
									"                    \r",
									"                    // Check if titleObject is present\r",
									"            pm.expect(jsonData).to.be.an(\"array\");\r",
									"\r",
									"                    // Validate titleObject structure\r",
									"            let nameObject = element.nameObject;\r",
									"            // Validate properties of nameObject\r",
									"            pm.expect(nameObject).to.have.property(\"nameID\").that.is.a(\"string\");\r",
									"\r",
									"            pm.expect(nameObject).to.have.property(\"name\").that.is.a(\"string\");\r",
									"\r",
									"            pm.expect(nameObject).to.have.property(\"namePoster\").that.is.a(\"string\");\r",
									"\r",
									"            pm.expect(nameObject).to.have.property(\"birthYr\").that.is.a(\"string\");\r",
									"\r",
									"            pm.expect(nameObject).to.have.property(\"deathYr\").that.satisfies(val => val === null || typeof val === 'string');\r",
									"\r",
									"            pm.expect(nameObject).to.have.property(\"profession\").that.is.a(\"string\");\r",
									"\r",
									"            pm.expect(nameObject).to.have.property(\"nameTitles\").that.is.an(\"array\");\r",
									"\r",
									"            // Validate the structure of the first item in the nameTitles array\r",
									"            if (nameObject.nameTitles.length > 0) {\r",
									"                let firstTitle = nameObject.nameTitles[0];\r",
									"                pm.expect(firstTitle).to.have.property(\"titleID\").that.is.a(\"string\");\r",
									"                pm.expect(firstTitle).to.have.property(\"category\").that.is.a(\"string\");\r",
									"            }\r",
									"        });\r",
									"    }\r",
									"}\r",
									"else if (pm.response.code === 204) {\r",
									"    pm.test('Response status code is 204', function () {\r",
									"        pm.response.to.have.status(204);\r",
									"    });\r",
									"\r",
									"    pm.test('Response body is empty', function () {\r",
									"        pm.expect(pm.response.text()).to.be.empty;\r",
									"    });\r",
									"\r",
									"    pm.test('Content-Type header is not present', function () {\r",
									"        pm.response.to.not.have.header('Content-Type');\r",
									"    });\r",
									"}\r",
									"else if(pm.response.code == 400){\r",
									"    pm.test(\"Response status code is 400\", function () {\r",
									"        pm.expect(pm.response.code).to.equal(400);\r",
									"    });\r",
									"\r",
									"\r",
									"    pm.test(\"Content-Type header is present and has value 'application/json'\", function () {\r",
									"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"    });\r",
									"\r",
									"\r",
									"    pm.test(\"Response body has a non-empty 'message' field\", function () {\r",
									"        const responseData = pm.response.json();\r",
									"        pm.expect(responseData.message).to.exist.and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nqueryObject\": {\n        \"namePart\": \"{{namePart}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/searchname?format={{format}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"searchname"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "format",
									"value": "{{format}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nqueryObject\": {\n        \"namePart\": \"{{namePart}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchname?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchname"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "19093"
								},
								{
									"key": "ETag",
									"value": "W/\"4a95-hH8WKd/9F90FhpeIE9C7NtusiCc\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 23:35:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0000019\",\n            \"name\": \"Federico Fellini\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/jH2VnHAuI0UbTWsnrjMPro0fC9j.jpg\",\n            \"birthYr\": 1920,\n            \"deathYr\": 1993,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098606\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0006984\",\n            \"name\": \"Ben Feitelson\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actor,producer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097318\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0009567\",\n            \"name\": \"Félix Acaso\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/lu01XhtnXfeKMuFVsf2QaQ3Ueri.jpg\",\n            \"birthYr\": 1919,\n            \"deathYr\": 2007,\n            \"profession\": \"actor,miscellaneous,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097542\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0023600\",\n            \"name\": \"Luis Fernando Alvés\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/iLuqqbL9es4NXSfHYyOiAO2MBmY.jpg\",\n            \"birthYr\": 1961,\n            \"deathYr\": 0,\n            \"profession\": \"actor\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098144\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0037268\",\n            \"name\": \"Fernando Arribas\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1940,\n            \"deathYr\": 2021,\n            \"profession\": \"camera_department,cinematographer,editor\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0095673\",\n                    \"category\": \"cinematographer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0040545\",\n            \"name\": \"Féodor Atkine\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/qCpSPJyM7v9p3fGBJV8ZqGETBr0.jpg\",\n            \"birthYr\": 1948,\n            \"deathYr\": 0,\n            \"profession\": \"actor,miscellaneous\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097519\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0099276\",\n            \"name\": \"Férid Boughedir\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/53hqwxWDK5WR2cgDe983wNwteDd.jpg\",\n            \"birthYr\": 1944,\n            \"deathYr\": 0,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0090665\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0106601\",\n            \"name\": \"Gösta Bredefeldt\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/1oPiTHh6dP3QDtVHwuImHUMR4FN.jpg\",\n            \"birthYr\": 1935,\n            \"deathYr\": 2010,\n            \"profession\": \"actor,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097310\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0106937\",\n            \"name\": \"Fred Breinersdorfer\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1946,\n            \"deathYr\": 0,\n            \"profession\": \"director,producer,writer,director,producer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0102547\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"titleID\": \"tt0102769\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0107167\",\n            \"name\": \"Ferdi Brendgen\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"composer,music_department,sound_department\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0096767\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0116253\",\n            \"name\": \"Irene Brunhöfer\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"editor,editor,editor,editorial_department,editorial_department,editorial_department\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0100750\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"titleID\": \"tt0102857\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"titleID\": \"tt0103048\",\n                    \"category\": \"editor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0127178\",\n            \"name\": \"Steffen Böttrich\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"camera_department,cinematographer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0102769\",\n                    \"category\": \"cinematographer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0150888\",\n            \"name\": \"Fei-Lit Chan\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1940,\n            \"deathYr\": 2021,\n            \"profession\": \"composer,music_department,composer,music_department\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0093309\",\n                    \"category\": \"composer\"\n                },\n                {\n                    \"titleID\": \"tt0097348\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0174290\",\n            \"name\": \"Fernando Conde\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/7ghXARjthyX8Yj6mxRpGEBe2IjY.jpg\",\n            \"birthYr\": 1952,\n            \"deathYr\": 0,\n            \"profession\": \"actor,camera_department\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0092984\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0198452\",\n            \"name\": \"Jennifer Daly\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actress,producer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098211\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0211922\",\n            \"name\": \"Anthony Steffen\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/oAbIyUdgS13uKSNlaEPpUC3XVmy.jpg\",\n            \"birthYr\": 1930,\n            \"deathYr\": 2004,\n            \"profession\": \"actor,assistant_director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0096797\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0217709\",\n            \"name\": \"Jennifer Delora\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/p49UJbzwPj3vaFa1CrAIHhoQBMo.jpg\",\n            \"birthYr\": 1962,\n            \"deathYr\": 0,\n            \"profession\": \"actress,miscellaneous,producer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0096075\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0232824\",\n            \"name\": \"Diego Donnhofer\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099035\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0233546\",\n            \"name\": \"Gerhard Dorfer\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/iN7aHS149xNHePHpCyzm6uG8q2p.jpg\",\n            \"birthYr\": 1939,\n            \"deathYr\": 0,\n            \"profession\": \"actor,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0103051\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0240439\",\n            \"name\": \"Peter Duffell\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1922,\n            \"deathYr\": 2017,\n            \"profession\": \"assistant_director,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097668\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0244471\",\n            \"name\": \"Fernando Durán Rojas\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1940,\n            \"deathYr\": 0,\n            \"profession\": \"assistant_director,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0093210\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0257739\",\n            \"name\": \"Axel Engstfeld\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1953,\n            \"deathYr\": 0,\n            \"profession\": \"director,producer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0096780\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0266138\",\n            \"name\": \"Feliks Falk\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/veS4jbZhsSKQyxzfTiSGEbek8gJ.jpg\",\n            \"birthYr\": 1941,\n            \"deathYr\": 0,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097644\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0270216\",\n            \"name\": \"Valeri Fedosov\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1941,\n            \"deathYr\": 1990,\n            \"profession\": \"camera_department,cinematographer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098030\",\n                    \"category\": \"cinematographer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0270537\",\n            \"name\": \"Giora Feidman\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1936,\n            \"deathYr\": 0,\n            \"profession\": \"composer,music_department,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099015\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0270548\",\n            \"name\": \"David Feig\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"camera_department,cinematographer,camera_department,cinematographer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098021\",\n                    \"category\": \"cinematographer\"\n                },\n                {\n                    \"titleID\": \"tt0102276\",\n                    \"category\": \"cinematographer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0270607\",\n            \"name\": \"Eberhard Feik\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/wgy27oa6TBJNDLC0TbzwHF0X6Y2.jpg\",\n            \"birthYr\": 1943,\n            \"deathYr\": 1994,\n            \"profession\": \"actor,actor,actor,actor,actor\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0100754\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"titleID\": \"tt0103046\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"titleID\": \"tt0103049\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"titleID\": \"tt0103050\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"titleID\": \"tt0103071\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0270828\",\n            \"name\": \"Lyudmila Feyginova\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/RKVyuvv5ZqGf9rjIkRWepJywcy.jpg\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"editor,editorial_department,editor,editorial_department\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0093572\",\n                    \"category\": \"editor\"\n                },\n                {\n                    \"titleID\": \"tt0097049\",\n                    \"category\": \"editor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0270851\",\n            \"name\": \"Ibolya Fekete\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/i6AqF626HXlddHyYEWYVk0oBbTI.jpg\",\n            \"birthYr\": 1951,\n            \"deathYr\": 0,\n            \"profession\": \"director,miscellaneous,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097697\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0271057\",\n            \"name\": \"John Feldman\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1954,\n            \"deathYr\": 0,\n            \"profession\": \"director,editor,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099017\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0272164\",\n            \"name\": \"Irina Feofanova\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/vi7LXCALtKGDlnfLfbhIAASWKC6.jpg\",\n            \"birthYr\": 1966,\n            \"deathYr\": 0,\n            \"profession\": \"actress\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097049\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0272445\",\n            \"name\": \"Graeme Ferguson\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1929,\n            \"deathYr\": 2021,\n            \"profession\": \"cinematographer,director,producer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099158\",\n                    \"category\": \"producer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0272658\",\n            \"name\": \"Jillali Ferhati\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/tuKcHlx1vLh2u3oamMmsMEjAJVg.jpg\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0100155\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0273113\",\n            \"name\": \"Peter Fernberger\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"camera_department,cinematographer,editor\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0092589\",\n                    \"category\": \"cinematographer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0273178\",\n            \"name\": \"Fernando Fernán Gómez\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/2itwZtBNlvA4B6tmFmNbQN9qvmu.jpg\",\n            \"birthYr\": 1921,\n            \"deathYr\": 2007,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0095674\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0273392\",\n            \"name\": \"Anita Fernández\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"editor,editorial_department,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097853\",\n                    \"category\": \"editor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0274008\",\n            \"name\": \"Stéphane Ferrara\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/tl56De7p6sgIuiY5QocJu5S3G7b.jpg\",\n            \"birthYr\": 1956,\n            \"deathYr\": 0,\n            \"profession\": \"actor,director,writer,actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098063\",\n                    \"category\": \"actor\"\n                },\n                {\n                    \"titleID\": \"tt0098531\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0274659\",\n            \"name\": \"Marco Ferreri\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/afP3Hk6ys05jqh33q8nrmkELpZz.jpg\",\n            \"birthYr\": 1928,\n            \"deathYr\": 1997,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0094841\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0274713\",\n            \"name\": \"Diana Ferreti\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/9y0YEE0gdR0DQNd7m69XQWfWNi5.jpg\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actress,director\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0093210\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0275138\",\n            \"name\": \"Andréa Ferréol\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/l2JBvxmFHXAMXsSxK7x18LVykOe.jpg\",\n            \"birthYr\": 1947,\n            \"deathYr\": 0,\n            \"profession\": \"actress,actress\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097803\",\n                    \"category\": \"actress\"\n                },\n                {\n                    \"titleID\": \"tt0098658\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0309838\",\n            \"name\": \"Federico Gattorno\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"composer,music_department,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0095394\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0335133\",\n            \"name\": \"Pierre Granier-Deferre\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/c6PP3Og7YA2jDdnsToIUSLy9INo.jpg\",\n            \"birthYr\": 1927,\n            \"deathYr\": 2007,\n            \"profession\": \"assistant_director,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0096857\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0344622\",\n            \"name\": \"Yosef Grunfeld\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1959,\n            \"deathYr\": 0,\n            \"profession\": \"editor,editorial_department,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098993\",\n                    \"category\": \"editor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0344662\",\n            \"name\": \"Ferenc Grunwalsky\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/pa088FhcTm5sKD4FcocK1XbcIsV.jpg\",\n            \"birthYr\": 1943,\n            \"deathYr\": 0,\n            \"profession\": \"cinematographer,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097697\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0399560\",\n            \"name\": \"Felix Huby\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1938,\n            \"deathYr\": 2022,\n            \"profession\": \"actor,miscellaneous,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0094808\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0405441\",\n            \"name\": \"Jonas C. Haefeli\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1947,\n            \"deathYr\": 0,\n            \"profession\": \"composer,sound_department\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0102857\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0420143\",\n            \"name\": \"Mark Jefferis\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actor,miscellaneous,special_effects\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0095783\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0420528\",\n            \"name\": \"Ferenc Jeli\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1933,\n            \"deathYr\": 2006,\n            \"profession\": \"assistant_director,miscellaneous,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097475\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0423645\",\n            \"name\": \"Arthur Joffé\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1953,\n            \"deathYr\": 0,\n            \"profession\": \"actor,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099009\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0452352\",\n            \"name\": \"Russell Kiefel\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/oYzrvpDwYrraj469Sfo9Jrk6L0D.jpg\",\n            \"birthYr\": 1951,\n            \"deathYr\": 2016,\n            \"profession\": \"actor,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0090785\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0460434\",\n            \"name\": \"Aleksandr Knaifel\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1943,\n            \"deathYr\": 0,\n            \"profession\": \"composer,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097743\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0470365\",\n            \"name\": \"Walter Maria Krautstorfer\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"cinematographer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097280\",\n                    \"category\": \"cinematographer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0525938\",\n            \"name\": \"Leopold Lummerstorfer\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"director,producer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0081436\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0547423\",\n            \"name\": \"Fermín Marimón\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actor,director,producer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098077\",\n                    \"category\": \"producer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0562807\",\n            \"name\": \"Ferdy Mayne\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/gf9P08A2vVFoQPf938U5viuogMV.jpg\",\n            \"birthYr\": 1916,\n            \"deathYr\": 1998,\n            \"profession\": \"actor\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0102474\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0599806\",\n            \"name\": \"Jennifer Montgomery\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"director,editor,producer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0091490\",\n                    \"category\": \"self\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0608775\",\n            \"name\": \"Fernand Moszkowicz\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1942,\n            \"deathYr\": 2019,\n            \"profession\": \"art_department,assistant_director,director\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097893\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0611126\",\n            \"name\": \"Nele Mueller-Stöfen\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/nmtvPucAMc8XtaghiCQcWuSPyWu.jpg\",\n            \"birthYr\": 1967,\n            \"deathYr\": 0,\n            \"profession\": \"actress,director,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0100751\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0642198\",\n            \"name\": \"Jennifer O'Neill\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/Ab54gxbGcOntZBXWEvsTvIxpCRk.jpg\",\n            \"birthYr\": 1948,\n            \"deathYr\": 0,\n            \"profession\": \"actress,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0094900\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0644389\",\n            \"name\": \"Mario Offenberg\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"director\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0094609\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0655826\",\n            \"name\": \"Federico Padovan\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"art_department,art_director,production_designer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099530\",\n                    \"category\": \"production_designer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0721073\",\n            \"name\": \"Fernando Rey\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/dK8oBtRU5z8pA0LvMqh09leXQVc.jpg\",\n            \"birthYr\": 1917,\n            \"deathYr\": 1994,\n            \"profession\": \"actor,miscellaneous\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0096877\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0777275\",\n            \"name\": \"Jennifer Schwartz\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actress,producer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0097066\",\n                    \"category\": \"actress\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0778214\",\n            \"name\": \"Hartmut Schönfeld\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1931,\n            \"deathYr\": 0,\n            \"profession\": \"art_department,costume_designer,production_designer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0100753\",\n                    \"category\": \"production_designer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0790762\",\n            \"name\": \"Jonathan Sheffer\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"composer,music_department,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099037\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0874096\",\n            \"name\": \"Fernando Trueba\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/ie3WiHvVWsfvUYVSSlCpnqi1dFw.jpg\",\n            \"birthYr\": 1955,\n            \"deathYr\": 0,\n            \"profession\": \"director,director,director,director,director,director,producer,producer,producer,producer,producer,producer,writer,writer,writer,writer,writer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0095671\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"titleID\": \"tt0095672\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"titleID\": \"tt0095673\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"titleID\": \"tt0095674\",\n                    \"category\": \"producer\"\n                },\n                {\n                    \"titleID\": \"tt0097924\",\n                    \"category\": \"director\"\n                },\n                {\n                    \"titleID\": \"tt0097925\",\n                    \"category\": \"producer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0886789\",\n            \"name\": \"Bertrand Van Effenterre\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1946,\n            \"deathYr\": 0,\n            \"profession\": \"director,producer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098534\",\n                    \"category\": \"director\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0886790\",\n            \"name\": \"Joële Van Effenterre\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/7t7ewTPSFEF6kF3PhM4cLnYQfj6.jpg\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"director,editor,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098534\",\n                    \"category\": \"editor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0938101\",\n            \"name\": \"Mal Wolfe\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"cinematographer,director,producer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0082473\",\n                    \"category\": \"cinematographer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0939431\",\n            \"name\": \"Yat-Fei Wong\",\n            \"namePoster\": \"https://image.tmdb.org/t/p/{width_variable}/eMpNYfWMxmIPWvDd1npajeDweI7.jpg\",\n            \"birthYr\": 1946,\n            \"deathYr\": 0,\n            \"profession\": \"actor,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0099001\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm0941185\",\n            \"name\": \"Guy Woolfenden\",\n            \"namePoster\": \"\",\n            \"birthYr\": 1937,\n            \"deathYr\": 2016,\n            \"profession\": \"composer,music_department,soundtrack\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0101750\",\n                    \"category\": \"composer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm2278536\",\n            \"name\": \"Ferran Casanovas\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actor\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098077\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm3450442\",\n            \"name\": \"Lung Fei\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"actor\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0094857\",\n                    \"category\": \"actor\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm5934338\",\n            \"name\": \"Lana Sofer\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"writer,writer,writer,writer\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0096361\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"titleID\": \"tt0096362\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"titleID\": \"tt0096363\",\n                    \"category\": \"writer\"\n                },\n                {\n                    \"titleID\": \"tt0098576\",\n                    \"category\": \"writer\"\n                }\n            ]\n        }\n    },\n    {\n        \"nameObject\": {\n            \"nameID\": \"nm6369854\",\n            \"name\": \"Louis-Paul Lofeko\",\n            \"namePoster\": \"\",\n            \"birthYr\": 0,\n            \"deathYr\": 0,\n            \"profession\": \"\",\n            \"nameTitles\": [\n                {\n                    \"titleID\": \"tt0098992\",\n                    \"category\": \"self\"\n                }\n            ]\n        }\n    }\n]"
						},
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nqueryObject\": {\n        \"namePart\": \"12\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchname?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchname"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "ETag",
									"value": "W/\"29-yNz0z5PEEUAosWra6JctqoCd2Hs\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 23:36:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nqueryObject\": {\n        \"namepart\": \"{{namePart}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchname?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchname"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "ETag",
									"value": "W/\"22-2zu8IF51cpif8eX8FuOb0YYgEzQ\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 23:34:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"namePart is required\"\n}"
						},
						{
							"name": "500 Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nqueryObject\": {\n        \"namePart\": \"{{namePart}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/searchname?format={{format}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"searchname"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "format",
											"value": "{{format}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "49"
								},
								{
									"key": "ETag",
									"value": "W/\"31-KG0nA0usp2kEFGevFWQmJz2a1tM\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Feb 2024 22:50:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Error in connection to the database\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "frontend endpoints",
			"item": [
				{
					"name": "get list of titleObjects by rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gqueryObject\": {\n    \"minrating\": \"{{minrating}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/searchbyrating",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"searchbyrating"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get list of titleObject by genre 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"if(pm.response.code == 200){    ",
									"    pm.test(\"Response status code is 200\", function () {",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"}",
									"else if(pm.response.code == 204){",
									"    pm.test(\"Response status code is 204\", function () {",
									"        pm.expect(pm.response.code).to.equal(204);",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gqueryObject\": {\n    \"qgenre\": \"{{qgenre}}\",\n    \"minrating\": \"{{minrating}}\",\n    \"yrFrom\":\"{{yrFrom}}\", //optional\n    \"yrTo\":\"{{yrTo}}\" //optional\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/bygenre",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"bygenre"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get list of nameObjects by namePart 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nqueryObject\": {\n    \"namePart\": \"{{namePart}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/searchname",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"searchname"
							],
							"query": [
								{
									"key": "limit",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllGenres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(genre) {",
									"        pm.expect(genre).to.be.a('string');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Response content type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Genres array is not empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseURL}}/getAllGenres"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://localhost:9876/ntuaflix_api",
			"type": "string"
		},
		{
			"key": "format",
			"value": "json"
		},
		{
			"key": "titleID",
			"value": "tt0034841"
		},
		{
			"key": "titlePart",
			"value": "hen",
			"type": "string"
		},
		{
			"key": "qgenre",
			"value": "Short",
			"type": "string"
		},
		{
			"key": "minrating",
			"value": "1",
			"type": "string"
		},
		{
			"key": "yrFrom",
			"value": "",
			"type": "string"
		},
		{
			"key": "yrTo",
			"value": "",
			"type": "string"
		},
		{
			"key": "nameID",
			"value": "nm0000019",
			"type": "string"
		},
		{
			"key": "namePart",
			"value": "Fe",
			"type": "string"
		}
	]
}